<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a517e45e-e016-4971-a18a-a7411f713c48" name="Changes" comment="interactive服务，新增关注功能">
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/6552c4c7-a9b7-442f-86f6-f9e52c2fae80.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/6552c4c7-a9b7-442f-86f6-f9e52c2fae80.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/install.md" beforeDir="false" afterPath="$PROJECT_DIR$/install.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../pack/GoLang" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2r6xsngn2s46cotp0GGGH3ON3QT" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/GoLangProjects/src/lifelog/pkg/kafkax&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;go.vgo&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mysql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\GoLangProjects\src\lifelog\pkg\kafkax" />
      <recent name="D:\GoLangProjects\src\lifelog\curl" />
      <recent name="D:\GoLangProjects\src\lifelog\comment\ioc" />
      <recent name="D:\GoLangProjects\src\lifelog\interactive\ioc" />
      <recent name="D:\GoLangProjects\src\lifelog\collect\ioc" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\GoLangProjects\src\lifelog\api\proto\gen" />
      <recent name="D:\GoLangProjects\src\lifelog\interactive" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestP in lifelog-grpc/pkg/kafkax">
    <configuration name="TestCm in lifelog-grpc/pkg/kafkax" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lifelog" />
      <working_directory value="$PROJECT_DIR$/pkg/kafkax" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="lifelog-grpc/pkg/kafkax" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCm\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestP in lifelog-grpc/pkg/kafkax" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lifelog" />
      <working_directory value="$PROJECT_DIR$/pkg/kafkax" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="lifelog-grpc/pkg/kafkax" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestP\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
      <item itemvalue="Go Test.TestCm in lifelog-grpc/pkg/kafkax" />
      <item itemvalue="Go Test.TestP in lifelog-grpc/pkg/kafkax" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestP in lifelog-grpc/pkg/kafkax" />
        <item itemvalue="Go Test.TestCm in lifelog-grpc/pkg/kafkax" />
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="lifelog和interactive转为微服务" />
    <MESSAGE value="修改了一些bug" />
    <MESSAGE value="修改了互动服务的bug" />
    <MESSAGE value="修改了收藏夹功能的命名，并且准备将收藏夹功能微服务化" />
    <MESSAGE value="收藏功能微服务化" />
    <MESSAGE value="收藏夹服务，修复了一些参数展示bug" />
    <MESSAGE value="comment功能微服务化" />
    <MESSAGE value="interactive服务，新增关注功能" />
    <option name="LAST_COMMIT_MESSAGE" value="interactive服务，新增关注功能" />
  </component>
  <component name="VgoProject">
    <environment>
      <map>
        <entry key="GOPROXY" value="https://goproxy.cn,direct" />
      </map>
    </environment>
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="GoApplicationRunConfiguration">
        <watch expression="*(*&quot;lifelog-grpc/api/proto/gen/api/proto/lifelog/v1.DetailManyResponse&quot;)(824636100032)" />
      </configuration>
    </watches-manager>
  </component>
</project>