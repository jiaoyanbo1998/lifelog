<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d567ea4a-56f0-4259-8a33-07aee52c4bd0" name="Changes" comment="添加了应用启动预加载，点赞数，阅读数，收藏数改为kafka生产者和消费者">
      <change afterPath="$PROJECT_DIR$/web/userHandler_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/proto/gen/user/v1/user_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/proto/gen/user/v1/user_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/loggerx/zap_logger.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/loggerx/zap_logger.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/web/userHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/web/userHandler.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../pack/GoLang" />
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/feed/repository/cache/feedCache.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/feed/repository/feedRepository.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/feed/service/feedService.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2rJ2PAOXbSeK09uJWbvk1NtZblC" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_MARK_IGNORED_FILES_AS_EXCLUDED&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/GoLangProjects/src/lifelog-grpc/lifeLog/ioc&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;go.vgo&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mysql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\GoLangProjects\src\lifelog-grpc\lifeLog\ioc" />
      <recent name="D:\GoLangProjects\src\lifelog-grpc\lifeLog\event" />
      <recent name="D:\GoLangProjects\src\lifelog-grpc\event\lifeLogEvent" />
      <recent name="D:\GoLangProjects\src\lifelog-grpc\interactive\event\likedEvent" />
      <recent name="D:\GoLangProjects\src\lifelog-grpc\ioc" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\GoLangProjects\src\lifelog\api\proto\gen\user\v1\mock" />
      <recent name="D:\GoLangProjects\src\lifelog\api\proto\gen\user\v1" />
      <recent name="D:\GoLangProjects\src\lifelog-grpc\event\interactiveEvent" />
      <recent name="D:\GoLangProjects\src\lifelog-grpc\interactive\event\feed" />
      <recent name="D:\GoLangProjects\src\lifelog-grpc\event\interactive" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.Test_UserHandler_LoginByEmailAndPassword/登录成功#01 in lifelog-grpc/web">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="lifelog-grpc" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="lifelog" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_UserHandler_LoginByEmailAndPassword/登录成功 in lifelog-grpc/web" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lifelog-grpc" />
      <working_directory value="$PROJECT_DIR$/web" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="lifelog-grpc/web" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_UserHandler_LoginByEmailAndPassword\E$/^\Q登录成功\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_UserHandler_LoginByEmailAndPassword/系统错误 in lifelog-grpc/web" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lifelog-grpc" />
      <working_directory value="$PROJECT_DIR$/web" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="lifelog-grpc/web" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_UserHandler_LoginByEmailAndPassword\E$/^\Q系统错误\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_UserHandler_LoginByEmailAndPassword/需要修改密码 in lifelog-grpc/web" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lifelog-grpc" />
      <working_directory value="$PROJECT_DIR$/web" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="lifelog-grpc/web" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_UserHandler_LoginByEmailAndPassword\E$/^\Q需要修改密码\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_UserHandler_LoginByEmailAndPassword/登录成功#01 in lifelog-grpc/web" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lifelog-grpc" />
      <working_directory value="$PROJECT_DIR$/web" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="lifelog-grpc/web" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_UserHandler_LoginByEmailAndPassword\E$/^\Q登录成功#01\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_UserHandler_RegisterByEmailAndPassword/注册成功 in lifelog-grpc/web" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lifelog-grpc" />
      <working_directory value="$PROJECT_DIR$/web" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="lifelog-grpc/web" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_UserHandler_RegisterByEmailAndPassword\E$/^\Q注册成功\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="lifelog-grpc" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="lifelog" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.Test_UserHandler_LoginByEmailAndPassword/登录成功#01 in lifelog-grpc/web" />
        <item itemvalue="Go Test.Test_UserHandler_RegisterByEmailAndPassword/注册成功 in lifelog-grpc/web" />
        <item itemvalue="Go Test.Test_UserHandler_LoginByEmailAndPassword/需要修改密码 in lifelog-grpc/web" />
        <item itemvalue="Go Test.Test_UserHandler_LoginByEmailAndPassword/系统错误 in lifelog-grpc/web" />
        <item itemvalue="Go Test.Test_UserHandler_LoginByEmailAndPassword/登录成功 in lifelog-grpc/web" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="修改了一些bug" />
    <MESSAGE value="新增sarama的kafka消费者和生产者" />
    <MESSAGE value="消费幂等，数据库添加了uuid字段，uuid设置了唯一索引" />
    <MESSAGE value="修改了，修改用户信息接口的bug" />
    <MESSAGE value="file服务初始化" />
    <MESSAGE value="新增，用户头像&#10;minio进行了一些友好的封装" />
    <MESSAGE value="完成，文件上传服务" />
    <MESSAGE value="完成，feed服务" />
    <MESSAGE value="完成，feed流服务：新增点赞feed流服务" />
    <MESSAGE value="完成，feed流服务：新增收藏、关注、阅读feed流服务" />
    <MESSAGE value="新增了，生活日志接口和收藏列表接口的性能压测" />
    <MESSAGE value="调整了lifeLog服务的vo层代码" />
    <MESSAGE value="修改" />
    <MESSAGE value="修复了分片上传的bug&#10;并对文件上传接口进行压测" />
    <MESSAGE value="feedService服务，添加了一个并发安全的实现" />
    <MESSAGE value="扩展了ZapLogger适配类的功能，添加了异步日志记录器" />
    <MESSAGE value="压测进行了一些修改，新增了异步分片上传" />
    <MESSAGE value="修改了ctx的过期时间" />
    <MESSAGE value="修改了lifeLog服务的详情接口，优化了缓存方案&#10;并新增了，该接口的压测" />
    <MESSAGE value="给生活日志服务的查询接口，添加了本地缓存和降级策略，并使用k6进行了性能压测" />
    <MESSAGE value="添加了应用启动预加载，点赞数，阅读数，收藏数改为kafka生产者和消费者" />
    <option name="LAST_COMMIT_MESSAGE" value="添加了应用启动预加载，点赞数，阅读数，收藏数改为kafka生产者和消费者" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/lifelog$Test_UserHandler_RegisterByEmailAndPassword__in_lifelog_grpc_web.out" NAME="Test_UserHandler_RegisterByEmailAndPassword/注册成功 in lifelog-grpc/web Coverage Results" MODIFIED="1738317905881" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/lifelog$Test_UserHandler_RegisterByEmailAndPassword_in_lifelog_grpc_web.out" NAME="Test_UserHandler_RegisterByEmailAndPassword in lifelog-grpc/web Coverage Results" MODIFIED="1738324430797" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>