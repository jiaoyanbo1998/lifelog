// 版本

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: api/proto/lifelog/v1/lifelog.proto

// 包名

package lifelogv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取多个lifelog详情
// 请求
type DetailManyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int64                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailManyRequest) Reset() {
	*x = DetailManyRequest{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailManyRequest) ProtoMessage() {}

func (x *DetailManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailManyRequest.ProtoReflect.Descriptor instead.
func (*DetailManyRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{0}
}

func (x *DetailManyRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 响应
type DetailManyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain []*LifeLogDomain       `protobuf:"bytes,1,rep,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailManyResponse) Reset() {
	*x = DetailManyResponse{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailManyResponse) ProtoMessage() {}

func (x *DetailManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailManyResponse.ProtoReflect.Descriptor instead.
func (*DetailManyResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{1}
}

func (x *DetailManyResponse) GetLifeLogDomain() []*LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

// 获取lifelog详情
// 请求
type DetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain *LifeLogDomain         `protobuf:"bytes,1,opt,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	IsPublic      bool                   `protobuf:"varint,2,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailRequest) Reset() {
	*x = DetailRequest{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailRequest) ProtoMessage() {}

func (x *DetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailRequest.ProtoReflect.Descriptor instead.
func (*DetailRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{2}
}

func (x *DetailRequest) GetLifeLogDomain() *LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

func (x *DetailRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

// 响应
type DetailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain *LifeLogDomain         `protobuf:"bytes,1,opt,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailResponse) Reset() {
	*x = DetailResponse{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailResponse) ProtoMessage() {}

func (x *DetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailResponse.ProtoReflect.Descriptor instead.
func (*DetailResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{3}
}

func (x *DetailResponse) GetLifeLogDomain() *LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

type LifeLogDomain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string  `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Author        *Author `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	CreateTime    int64   `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime    int64                  `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Limit         int64                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	Status        int64                  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	ReadCount     int64                  `protobuf:"varint,10,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`
	LikeCount     int64                  `protobuf:"varint,11,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	CollectCount  int64                  `protobuf:"varint,12,opt,name=collect_count,json=collectCount,proto3" json:"collect_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LifeLogDomain) Reset() {
	*x = LifeLogDomain{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LifeLogDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifeLogDomain) ProtoMessage() {}

func (x *LifeLogDomain) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifeLogDomain.ProtoReflect.Descriptor instead.
func (*LifeLogDomain) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{4}
}

func (x *LifeLogDomain) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LifeLogDomain) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LifeLogDomain) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *LifeLogDomain) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *LifeLogDomain) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *LifeLogDomain) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *LifeLogDomain) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *LifeLogDomain) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LifeLogDomain) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LifeLogDomain) GetReadCount() int64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *LifeLogDomain) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *LifeLogDomain) GetCollectCount() int64 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

type Author struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NickName      string                 `protobuf:"bytes,2,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Author) Reset() {
	*x = Author{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{5}
}

func (x *Author) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Author) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

// 编辑lifelog
// 请求
type EditRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain *LifeLogDomain         `protobuf:"bytes,1,opt,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditRequest) Reset() {
	*x = EditRequest{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditRequest) ProtoMessage() {}

func (x *EditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditRequest.ProtoReflect.Descriptor instead.
func (*EditRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{6}
}

func (x *EditRequest) GetLifeLogDomain() *LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

// 响应
type EditResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain *LifeLogDomain         `protobuf:"bytes,1,opt,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditResponse) Reset() {
	*x = EditResponse{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditResponse) ProtoMessage() {}

func (x *EditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditResponse.ProtoReflect.Descriptor instead.
func (*EditResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{7}
}

func (x *EditResponse) GetLifeLogDomain() *LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

// 根据id删除lifelog
// 请求
type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int64                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	IsPublic      bool                   `protobuf:"varint,2,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

// 响应
type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{9}
}

// 根据title查找lifelog
// 请求
type SearchByTitleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain *LifeLogDomain         `protobuf:"bytes,1,opt,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchByTitleRequest) Reset() {
	*x = SearchByTitleRequest{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchByTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByTitleRequest) ProtoMessage() {}

func (x *SearchByTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByTitleRequest.ProtoReflect.Descriptor instead.
func (*SearchByTitleRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{10}
}

func (x *SearchByTitleRequest) GetLifeLogDomain() *LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

// 响应
type SearchByTitleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain []*LifeLogDomain       `protobuf:"bytes,1,rep,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchByTitleResponse) Reset() {
	*x = SearchByTitleResponse{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchByTitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByTitleResponse) ProtoMessage() {}

func (x *SearchByTitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByTitleResponse.ProtoReflect.Descriptor instead.
func (*SearchByTitleResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{11}
}

func (x *SearchByTitleResponse) GetLifeLogDomain() []*LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

// 根据id查找制作库的lifelog（作者的lifelog列表）
// 请求
type DraftListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain *LifeLogDomain         `protobuf:"bytes,1,opt,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DraftListRequest) Reset() {
	*x = DraftListRequest{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DraftListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftListRequest) ProtoMessage() {}

func (x *DraftListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftListRequest.ProtoReflect.Descriptor instead.
func (*DraftListRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{12}
}

func (x *DraftListRequest) GetLifeLogDomain() *LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

// 响应
type DraftListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain []*LifeLogDomain       `protobuf:"bytes,1,rep,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DraftListResponse) Reset() {
	*x = DraftListResponse{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DraftListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftListResponse) ProtoMessage() {}

func (x *DraftListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftListResponse.ProtoReflect.Descriptor instead.
func (*DraftListResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{13}
}

func (x *DraftListResponse) GetLifeLogDomain() []*LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

// 根据id撤销已发表的lifelog
// 请求
type RevokeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain *LifeLogDomain         `protobuf:"bytes,1,opt,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeRequest) Reset() {
	*x = RevokeRequest{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRequest) ProtoMessage() {}

func (x *RevokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRequest.ProtoReflect.Descriptor instead.
func (*RevokeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{14}
}

func (x *RevokeRequest) GetLifeLogDomain() *LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

// 响应
type RevokeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeResponse) Reset() {
	*x = RevokeResponse{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeResponse) ProtoMessage() {}

func (x *RevokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeResponse.ProtoReflect.Descriptor instead.
func (*RevokeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{15}
}

// 发布lifelog，将制作库的lifelog发布到线上库
// 请求
type PublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain *LifeLogDomain         `protobuf:"bytes,1,opt,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{16}
}

func (x *PublishRequest) GetLifeLogDomain() *LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

// 响应
type PublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LifeLogDomain *LifeLogDomain         `protobuf:"bytes,1,opt,name=lifeLogDomain,proto3" json:"lifeLogDomain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_lifelog_v1_lifelog_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP(), []int{17}
}

func (x *PublishResponse) GetLifeLogDomain() *LifeLogDomain {
	if x != nil {
		return x.LifeLogDomain
	}
	return nil
}

var File_api_proto_lifelog_v1_lifelog_proto protoreflect.FileDescriptor

var file_api_proto_lifelog_v1_lifelog_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x22, 0x25, 0x0a, 0x11, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x12, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x6d,
	0x0a, 0x0d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3f, 0x0a, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x51, 0x0a,
	0x0e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x22, 0xe6, 0x02, 0x0a, 0x0d, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x06, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0b, 0x45, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x69, 0x66, 0x65,
	0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x66,
	0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0d, 0x6c, 0x69, 0x66, 0x65,
	0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x4f, 0x0a, 0x0c, 0x45, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x69, 0x66,
	0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0d, 0x6c, 0x69, 0x66,
	0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x3e, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x14,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69,
	0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x58, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42,
	0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22,
	0x53, 0x0a, 0x10, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x66,
	0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x22, 0x54, 0x0a, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x69, 0x66,
	0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0d, 0x6c, 0x69, 0x66,
	0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x50, 0x0a, 0x0d, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x6c,
	0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0d, 0x6c,
	0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x10, 0x0a, 0x0e,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51,
	0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x52, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x22, 0x52, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69,
	0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x4c, 0x6f, 0x67, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x32, 0xbf, 0x04, 0x0a, 0x0e, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x6f,
	0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74,
	0x12, 0x17, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6c, 0x69, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e,
	0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x19,
	0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x69, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x12, 0x1a, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6c,
	0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x1d, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x6e, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x95, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4c, 0x69, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2c, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x6c,
	0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4c, 0x58, 0x58, 0xaa, 0x02,
	0x0a, 0x4c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a, 0x4c, 0x69,
	0x66, 0x65, 0x6c, 0x6f, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x4c, 0x69, 0x66, 0x65, 0x6c,
	0x6f, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0b, 0x4c, 0x69, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_lifelog_v1_lifelog_proto_rawDescOnce sync.Once
	file_api_proto_lifelog_v1_lifelog_proto_rawDescData = file_api_proto_lifelog_v1_lifelog_proto_rawDesc
)

func file_api_proto_lifelog_v1_lifelog_proto_rawDescGZIP() []byte {
	file_api_proto_lifelog_v1_lifelog_proto_rawDescOnce.Do(func() {
		file_api_proto_lifelog_v1_lifelog_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_lifelog_v1_lifelog_proto_rawDescData)
	})
	return file_api_proto_lifelog_v1_lifelog_proto_rawDescData
}

var file_api_proto_lifelog_v1_lifelog_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_proto_lifelog_v1_lifelog_proto_goTypes = []any{
	(*DetailManyRequest)(nil),     // 0: lifelog.v1.DetailManyRequest
	(*DetailManyResponse)(nil),    // 1: lifelog.v1.DetailManyResponse
	(*DetailRequest)(nil),         // 2: lifelog.v1.DetailRequest
	(*DetailResponse)(nil),        // 3: lifelog.v1.DetailResponse
	(*LifeLogDomain)(nil),         // 4: lifelog.v1.LifeLogDomain
	(*Author)(nil),                // 5: lifelog.v1.Author
	(*EditRequest)(nil),           // 6: lifelog.v1.EditRequest
	(*EditResponse)(nil),          // 7: lifelog.v1.EditResponse
	(*DeleteRequest)(nil),         // 8: lifelog.v1.DeleteRequest
	(*DeleteResponse)(nil),        // 9: lifelog.v1.DeleteResponse
	(*SearchByTitleRequest)(nil),  // 10: lifelog.v1.SearchByTitleRequest
	(*SearchByTitleResponse)(nil), // 11: lifelog.v1.SearchByTitleResponse
	(*DraftListRequest)(nil),      // 12: lifelog.v1.DraftListRequest
	(*DraftListResponse)(nil),     // 13: lifelog.v1.DraftListResponse
	(*RevokeRequest)(nil),         // 14: lifelog.v1.RevokeRequest
	(*RevokeResponse)(nil),        // 15: lifelog.v1.RevokeResponse
	(*PublishRequest)(nil),        // 16: lifelog.v1.PublishRequest
	(*PublishResponse)(nil),       // 17: lifelog.v1.PublishResponse
}
var file_api_proto_lifelog_v1_lifelog_proto_depIdxs = []int32{
	4,  // 0: lifelog.v1.DetailManyResponse.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	4,  // 1: lifelog.v1.DetailRequest.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	4,  // 2: lifelog.v1.DetailResponse.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	5,  // 3: lifelog.v1.LifeLogDomain.author:type_name -> lifelog.v1.Author
	4,  // 4: lifelog.v1.EditRequest.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	4,  // 5: lifelog.v1.EditResponse.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	4,  // 6: lifelog.v1.SearchByTitleRequest.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	4,  // 7: lifelog.v1.SearchByTitleResponse.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	4,  // 8: lifelog.v1.DraftListRequest.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	4,  // 9: lifelog.v1.DraftListResponse.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	4,  // 10: lifelog.v1.RevokeRequest.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	4,  // 11: lifelog.v1.PublishRequest.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	4,  // 12: lifelog.v1.PublishResponse.lifeLogDomain:type_name -> lifelog.v1.LifeLogDomain
	6,  // 13: lifelog.v1.LifeLogService.Edit:input_type -> lifelog.v1.EditRequest
	8,  // 14: lifelog.v1.LifeLogService.Delete:input_type -> lifelog.v1.DeleteRequest
	10, // 15: lifelog.v1.LifeLogService.SearchByTitle:input_type -> lifelog.v1.SearchByTitleRequest
	12, // 16: lifelog.v1.LifeLogService.DraftList:input_type -> lifelog.v1.DraftListRequest
	14, // 17: lifelog.v1.LifeLogService.Revoke:input_type -> lifelog.v1.RevokeRequest
	16, // 18: lifelog.v1.LifeLogService.Publish:input_type -> lifelog.v1.PublishRequest
	2,  // 19: lifelog.v1.LifeLogService.Detail:input_type -> lifelog.v1.DetailRequest
	0,  // 20: lifelog.v1.LifeLogService.DetailMany:input_type -> lifelog.v1.DetailManyRequest
	7,  // 21: lifelog.v1.LifeLogService.Edit:output_type -> lifelog.v1.EditResponse
	9,  // 22: lifelog.v1.LifeLogService.Delete:output_type -> lifelog.v1.DeleteResponse
	11, // 23: lifelog.v1.LifeLogService.SearchByTitle:output_type -> lifelog.v1.SearchByTitleResponse
	13, // 24: lifelog.v1.LifeLogService.DraftList:output_type -> lifelog.v1.DraftListResponse
	15, // 25: lifelog.v1.LifeLogService.Revoke:output_type -> lifelog.v1.RevokeResponse
	17, // 26: lifelog.v1.LifeLogService.Publish:output_type -> lifelog.v1.PublishResponse
	3,  // 27: lifelog.v1.LifeLogService.Detail:output_type -> lifelog.v1.DetailResponse
	1,  // 28: lifelog.v1.LifeLogService.DetailMany:output_type -> lifelog.v1.DetailManyResponse
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_proto_lifelog_v1_lifelog_proto_init() }
func file_api_proto_lifelog_v1_lifelog_proto_init() {
	if File_api_proto_lifelog_v1_lifelog_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_lifelog_v1_lifelog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_lifelog_v1_lifelog_proto_goTypes,
		DependencyIndexes: file_api_proto_lifelog_v1_lifelog_proto_depIdxs,
		MessageInfos:      file_api_proto_lifelog_v1_lifelog_proto_msgTypes,
	}.Build()
	File_api_proto_lifelog_v1_lifelog_proto = out.File
	file_api_proto_lifelog_v1_lifelog_proto_rawDesc = nil
	file_api_proto_lifelog_v1_lifelog_proto_goTypes = nil
	file_api_proto_lifelog_v1_lifelog_proto_depIdxs = nil
}
